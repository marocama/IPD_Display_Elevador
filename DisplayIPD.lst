;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/04/2020 08:44:38
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2AF5      	GOTO       757
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00EA      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00E9      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0804      	MOVF       FSR, 0
0x000C	0x00A0      	MOVWF      32
;interruption.h,1 :: 		void interrupt() {
;interruption.h,3 :: 		setColumn(currentColumn);                                                  // Apaga tudo e varre as colunas
0x000D	0x0859      	MOVF       _currentColumn, 0
0x000E	0x00ED      	MOVWF      FARG_setColumn_column
0x000F	0x01EE      	CLRF       FARG_setColumn_column+1
0x0010	0x2165      	CALL       _setColumn
;interruption.h,5 :: 		switch(statusPrint) {
0x0011	0x2816      	GOTO       L_interrupt58
;interruption.h,6 :: 		case 0:
L_interrupt60:
;interruption.h,8 :: 		break;
0x0012	0x2823      	GOTO       L_interrupt59
;interruption.h,9 :: 		case 1:
L_interrupt61:
;interruption.h,12 :: 		break;
0x0013	0x2823      	GOTO       L_interrupt59
;interruption.h,13 :: 		case 2:
L_interrupt62:
;interruption.h,16 :: 		break;
0x0014	0x2823      	GOTO       L_interrupt59
;interruption.h,17 :: 		default:
L_interrupt63:
;interruption.h,19 :: 		break;
0x0015	0x2823      	GOTO       L_interrupt59
;interruption.h,20 :: 		}
L_interrupt58:
0x0016	0x0868      	MOVF       _statusPrint, 0
0x0017	0x3A00      	XORLW      0
0x0018	0x1903      	BTFSC      STATUS, 2
0x0019	0x2812      	GOTO       L_interrupt60
0x001A	0x0868      	MOVF       _statusPrint, 0
0x001B	0x3A01      	XORLW      1
0x001C	0x1903      	BTFSC      STATUS, 2
0x001D	0x2813      	GOTO       L_interrupt61
0x001E	0x0868      	MOVF       _statusPrint, 0
0x001F	0x3A02      	XORLW      2
0x0020	0x1903      	BTFSC      STATUS, 2
0x0021	0x2814      	GOTO       L_interrupt62
0x0022	0x2815      	GOTO       L_interrupt63
L_interrupt59:
;interruption.h,22 :: 		if(character_1 == 0x20) { posInitialColumn = 4; posFinalColumn = 7; } else { posInitialColumn = 1; posFinalColumn = 10; }
0x0023	0x0864      	MOVF       _character_1, 0
0x0024	0x3A20      	XORLW      32
0x0025	0x1D03      	BTFSS      STATUS, 2
0x0026	0x282C      	GOTO       L_interrupt64
0x0027	0x3004      	MOVLW      4
0x0028	0x00CF      	MOVWF      _posInitialColumn
0x0029	0x3007      	MOVLW      7
0x002A	0x00CE      	MOVWF      _posFinalColumn
0x002B	0x2830      	GOTO       L_interrupt65
L_interrupt64:
0x002C	0x3001      	MOVLW      1
0x002D	0x00CF      	MOVWF      _posInitialColumn
0x002E	0x300A      	MOVLW      10
0x002F	0x00CE      	MOVWF      _posFinalColumn
L_interrupt65:
;interruption.h,26 :: 		printStorey(character_1, character_2, 1);
0x0030	0x0864      	MOVF       _character_1, 0
0x0031	0x1683      	BSF        STATUS, 5
0x0032	0x00A0      	MOVWF      FARG_printStorey_character_1
0x0033	0x1283      	BCF        STATUS, 5
0x0034	0x0865      	MOVF       _character_2, 0
0x0035	0x1683      	BSF        STATUS, 5
0x0036	0x00A1      	MOVWF      FARG_printStorey_character_2
0x0037	0x3001      	MOVLW      1
0x0038	0x00A2      	MOVWF      FARG_printStorey_status
0x0039	0x3000      	MOVLW      0
0x003A	0x00A3      	MOVWF      FARG_printStorey_status+1
0x003B	0x21D3      	CALL       _printStorey
;interruption.h,29 :: 		if(currentColumn >= posFinalColumn) {
0x003C	0x084E      	MOVF       _posFinalColumn, 0
0x003D	0x0259      	SUBWF      _currentColumn, 0
0x003E	0x1C03      	BTFSS      STATUS, 0
0x003F	0x2846      	GOTO       L_interrupt66
;interruption.h,30 :: 		currentColumn = posInitialColumn;
0x0040	0x084F      	MOVF       _posInitialColumn, 0
0x0041	0x00D9      	MOVWF      _currentColumn
;interruption.h,31 :: 		currentPosition = 1;
0x0042	0x3001      	MOVLW      1
0x0043	0x00CD      	MOVWF      _currentPosition
;interruption.h,32 :: 		counterPrint++;
0x0044	0x0AD8      	INCF       _counterPrint, 1
;interruption.h,33 :: 		} else {
0x0045	0x284F      	GOTO       L_interrupt67
L_interrupt66:
;interruption.h,34 :: 		currentColumn++;
0x0046	0x0AD9      	INCF       _currentColumn, 1
;interruption.h,35 :: 		if(currentPosition >= 5) {
0x0047	0x3005      	MOVLW      5
0x0048	0x024D      	SUBWF      _currentPosition, 0
0x0049	0x1C03      	BTFSS      STATUS, 0
0x004A	0x284E      	GOTO       L_interrupt68
;interruption.h,36 :: 		currentPosition = 1;
0x004B	0x3001      	MOVLW      1
0x004C	0x00CD      	MOVWF      _currentPosition
;interruption.h,37 :: 		} else {
0x004D	0x284F      	GOTO       L_interrupt69
L_interrupt68:
;interruption.h,38 :: 		currentPosition++;
0x004E	0x0ACD      	INCF       _currentPosition, 1
;interruption.h,39 :: 		}
L_interrupt69:
;interruption.h,40 :: 		}
L_interrupt67:
;interruption.h,42 :: 		if((posInitialColumn == 1 && counterPrint > 90) ||                         // Velocidade de animação para 1 caracter
0x004F	0x084F      	MOVF       _posInitialColumn, 0
0x0050	0x3A01      	XORLW      1
0x0051	0x1D03      	BTFSS      STATUS, 2
0x0052	0x2858      	GOTO       L__interrupt84
0x0053	0x0858      	MOVF       _counterPrint, 0
0x0054	0x3C5A      	SUBLW      90
0x0055	0x1803      	BTFSC      STATUS, 0
0x0056	0x2858      	GOTO       L__interrupt84
0x0057	0x2862      	GOTO       L__interrupt82
;interruption.h,43 :: 		(posInitialColumn == 4 && counterPrint == 180)) {                       // Velocidade de animação para 2 caracteres
L__interrupt84:
0x0058	0x084F      	MOVF       _posInitialColumn, 0
0x0059	0x3A04      	XORLW      4
0x005A	0x1D03      	BTFSS      STATUS, 2
0x005B	0x2861      	GOTO       L__interrupt83
0x005C	0x0858      	MOVF       _counterPrint, 0
0x005D	0x3AB4      	XORLW      180
0x005E	0x1D03      	BTFSS      STATUS, 2
0x005F	0x2861      	GOTO       L__interrupt83
0x0060	0x2862      	GOTO       L__interrupt82
L__interrupt83:
0x0061	0x286B      	GOTO       L_interrupt76
L__interrupt82:
;interruption.h,45 :: 		counterVertical == 1 ? counterVertical = 8 : counterVertical--;
0x0062	0x085A      	MOVF       _counterVertical, 0
0x0063	0x3A01      	XORLW      1
0x0064	0x1D03      	BTFSS      STATUS, 2
0x0065	0x2869      	GOTO       L_interrupt77
0x0066	0x3008      	MOVLW      8
0x0067	0x00DA      	MOVWF      _counterVertical
0x0068	0x286A      	GOTO       L_interrupt78
L_interrupt77:
0x0069	0x03DA      	DECF       _counterVertical, 1
L_interrupt78:
;interruption.h,46 :: 		counterPrint = 0;
0x006A	0x01D8      	CLRF       _counterPrint
;interruption.h,47 :: 		}
L_interrupt76:
;interruption.h,50 :: 		PIR1.TMR2IF = 0;
0x006B	0x108C      	BCF        PIR1, 1
;interruption.h,51 :: 		}
L_end_interrupt:
L__interrupt108:
0x006C	0x0820      	MOVF       32, 0
0x006D	0x0084      	MOVWF      FSR
0x006E	0x0869      	MOVF       ___savePCLATH, 0
0x006F	0x008A      	MOVWF      PCLATH
0x0070	0x0E6A      	SWAPF      ___saveSTATUS, 0
0x0071	0x0083      	MOVWF      STATUS
0x0072	0x0EFF      	SWAPF      R15, 1
0x0073	0x0E7F      	SWAPF      R15, 0
0x0074	0x0009      	RETFIE
; end of _interrupt
_lightLine:
;functions.h,43 :: 		void lightLine(int line) {
;functions.h,45 :: 		switch(line) {
0x0075	0x288C      	GOTO       L_lightLine13
;functions.h,46 :: 		case 1:
L_lightLine15:
;functions.h,47 :: 		on_line_7;
0x0076	0x1283      	BCF        STATUS, 5
0x0077	0x1303      	BCF        STATUS, 6
0x0078	0x1506      	BSF        PORTB, 2
;functions.h,48 :: 		break;
0x0079	0x28C6      	GOTO       L_lightLine14
;functions.h,49 :: 		case 2:
L_lightLine16:
0x007A	0x1283      	BCF        STATUS, 5
;functions.h,50 :: 		on_line_6;
0x007B	0x1486      	BSF        PORTB, 1
;functions.h,51 :: 		break;
0x007C	0x28C6      	GOTO       L_lightLine14
;functions.h,52 :: 		case 3:
L_lightLine17:
0x007D	0x1283      	BCF        STATUS, 5
;functions.h,53 :: 		on_line_5;
0x007E	0x1686      	BSF        PORTB, 5
;functions.h,54 :: 		break;
0x007F	0x28C6      	GOTO       L_lightLine14
;functions.h,55 :: 		case 4:
L_lightLine18:
0x0080	0x1283      	BCF        STATUS, 5
;functions.h,56 :: 		on_line_4;
0x0081	0x1505      	BSF        PORTA, 2
;functions.h,57 :: 		break;
0x0082	0x28C6      	GOTO       L_lightLine14
;functions.h,58 :: 		case 5:
L_lightLine19:
0x0083	0x1283      	BCF        STATUS, 5
;functions.h,59 :: 		on_line_3;
0x0084	0x1705      	BSF        PORTA, 6
;functions.h,60 :: 		break;
0x0085	0x28C6      	GOTO       L_lightLine14
;functions.h,61 :: 		case 6:
L_lightLine20:
0x0086	0x1283      	BCF        STATUS, 5
;functions.h,62 :: 		on_line_2;
0x0087	0x1405      	BSF        PORTA, 0
;functions.h,63 :: 		break;
0x0088	0x28C6      	GOTO       L_lightLine14
;functions.h,64 :: 		case 7:
L_lightLine21:
0x0089	0x1283      	BCF        STATUS, 5
;functions.h,65 :: 		on_line_1;
0x008A	0x1785      	BSF        PORTA, 7
;functions.h,66 :: 		break;
0x008B	0x28C6      	GOTO       L_lightLine14
;functions.h,67 :: 		}
L_lightLine13:
0x008C	0x1303      	BCF        STATUS, 6
0x008D	0x3000      	MOVLW      0
0x008E	0x1683      	BSF        STATUS, 5
0x008F	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x0090	0x1D03      	BTFSS      STATUS, 2
0x0091	0x2894      	GOTO       L__lightLine97
0x0092	0x3001      	MOVLW      1
0x0093	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine97:
0x0094	0x1903      	BTFSC      STATUS, 2
0x0095	0x2876      	GOTO       L_lightLine15
0x0096	0x3000      	MOVLW      0
0x0097	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x0098	0x1D03      	BTFSS      STATUS, 2
0x0099	0x289C      	GOTO       L__lightLine98
0x009A	0x3002      	MOVLW      2
0x009B	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine98:
0x009C	0x1903      	BTFSC      STATUS, 2
0x009D	0x287A      	GOTO       L_lightLine16
0x009E	0x3000      	MOVLW      0
0x009F	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x00A0	0x1D03      	BTFSS      STATUS, 2
0x00A1	0x28A4      	GOTO       L__lightLine99
0x00A2	0x3003      	MOVLW      3
0x00A3	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine99:
0x00A4	0x1903      	BTFSC      STATUS, 2
0x00A5	0x287D      	GOTO       L_lightLine17
0x00A6	0x3000      	MOVLW      0
0x00A7	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x00A8	0x1D03      	BTFSS      STATUS, 2
0x00A9	0x28AC      	GOTO       L__lightLine100
0x00AA	0x3004      	MOVLW      4
0x00AB	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine100:
0x00AC	0x1903      	BTFSC      STATUS, 2
0x00AD	0x2880      	GOTO       L_lightLine18
0x00AE	0x3000      	MOVLW      0
0x00AF	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x00B0	0x1D03      	BTFSS      STATUS, 2
0x00B1	0x28B4      	GOTO       L__lightLine101
0x00B2	0x3005      	MOVLW      5
0x00B3	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine101:
0x00B4	0x1903      	BTFSC      STATUS, 2
0x00B5	0x2883      	GOTO       L_lightLine19
0x00B6	0x3000      	MOVLW      0
0x00B7	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x00B8	0x1D03      	BTFSS      STATUS, 2
0x00B9	0x28BC      	GOTO       L__lightLine102
0x00BA	0x3006      	MOVLW      6
0x00BB	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine102:
0x00BC	0x1903      	BTFSC      STATUS, 2
0x00BD	0x2886      	GOTO       L_lightLine20
0x00BE	0x3000      	MOVLW      0
0x00BF	0x0625      	XORWF      FARG_lightLine_line+1, 0
0x00C0	0x1D03      	BTFSS      STATUS, 2
0x00C1	0x28C4      	GOTO       L__lightLine103
0x00C2	0x3007      	MOVLW      7
0x00C3	0x0624      	XORWF      FARG_lightLine_line, 0
L__lightLine103:
0x00C4	0x1903      	BTFSC      STATUS, 2
0x00C5	0x2889      	GOTO       L_lightLine21
L_lightLine14:
;functions.h,68 :: 		}
L_end_lightLine:
0x00C6	0x0008      	RETURN
; end of _lightLine
_verifyBit:
;functions.h,70 :: 		int verifyBit(char character, char position) {
;functions.h,72 :: 		switch(position) {
0x00C7	0x28FA      	GOTO       L_verifyBit22
;functions.h,73 :: 		case 0:
L_verifyBit24:
;functions.h,74 :: 		return character.f0;
0x00C8	0x3000      	MOVLW      0
0x00C9	0x1683      	BSF        STATUS, 5
0x00CA	0x1303      	BCF        STATUS, 6
0x00CB	0x1824      	BTFSC      FARG_verifyBit_character, 0
0x00CC	0x3001      	MOVLW      1
0x00CD	0x00F0      	MOVWF      R0
0x00CE	0x01F1      	CLRF       R0+1
0x00CF	0x291C      	GOTO       L_end_verifyBit
;functions.h,76 :: 		case 1:
L_verifyBit25:
;functions.h,77 :: 		return character.f1;
0x00D0	0x3000      	MOVLW      0
0x00D1	0x18A4      	BTFSC      FARG_verifyBit_character, 1
0x00D2	0x3001      	MOVLW      1
0x00D3	0x00F0      	MOVWF      R0
0x00D4	0x01F1      	CLRF       R0+1
0x00D5	0x291C      	GOTO       L_end_verifyBit
;functions.h,79 :: 		case 2:
L_verifyBit26:
;functions.h,80 :: 		return character.f2;
0x00D6	0x3000      	MOVLW      0
0x00D7	0x1924      	BTFSC      FARG_verifyBit_character, 2
0x00D8	0x3001      	MOVLW      1
0x00D9	0x00F0      	MOVWF      R0
0x00DA	0x01F1      	CLRF       R0+1
0x00DB	0x291C      	GOTO       L_end_verifyBit
;functions.h,82 :: 		case 3:
L_verifyBit27:
;functions.h,83 :: 		return character.f3;
0x00DC	0x3000      	MOVLW      0
0x00DD	0x19A4      	BTFSC      FARG_verifyBit_character, 3
0x00DE	0x3001      	MOVLW      1
0x00DF	0x00F0      	MOVWF      R0
0x00E0	0x01F1      	CLRF       R0+1
0x00E1	0x291C      	GOTO       L_end_verifyBit
;functions.h,85 :: 		case 4:
L_verifyBit28:
;functions.h,86 :: 		return character.f4;
0x00E2	0x3000      	MOVLW      0
0x00E3	0x1A24      	BTFSC      FARG_verifyBit_character, 4
0x00E4	0x3001      	MOVLW      1
0x00E5	0x00F0      	MOVWF      R0
0x00E6	0x01F1      	CLRF       R0+1
0x00E7	0x291C      	GOTO       L_end_verifyBit
;functions.h,88 :: 		case 5:
L_verifyBit29:
;functions.h,89 :: 		return character.f5;
0x00E8	0x3000      	MOVLW      0
0x00E9	0x1AA4      	BTFSC      FARG_verifyBit_character, 5
0x00EA	0x3001      	MOVLW      1
0x00EB	0x00F0      	MOVWF      R0
0x00EC	0x01F1      	CLRF       R0+1
0x00ED	0x291C      	GOTO       L_end_verifyBit
;functions.h,91 :: 		case 6:
L_verifyBit30:
;functions.h,92 :: 		return character.f6;
0x00EE	0x3000      	MOVLW      0
0x00EF	0x1B24      	BTFSC      FARG_verifyBit_character, 6
0x00F0	0x3001      	MOVLW      1
0x00F1	0x00F0      	MOVWF      R0
0x00F2	0x01F1      	CLRF       R0+1
0x00F3	0x291C      	GOTO       L_end_verifyBit
;functions.h,94 :: 		case 7:
L_verifyBit31:
;functions.h,95 :: 		return character.f7;
0x00F4	0x3000      	MOVLW      0
0x00F5	0x1BA4      	BTFSC      FARG_verifyBit_character, 7
0x00F6	0x3001      	MOVLW      1
0x00F7	0x00F0      	MOVWF      R0
0x00F8	0x01F1      	CLRF       R0+1
0x00F9	0x291C      	GOTO       L_end_verifyBit
;functions.h,97 :: 		}
L_verifyBit22:
0x00FA	0x1683      	BSF        STATUS, 5
0x00FB	0x1303      	BCF        STATUS, 6
0x00FC	0x0825      	MOVF       FARG_verifyBit_position, 0
0x00FD	0x3A00      	XORLW      0
0x00FE	0x1903      	BTFSC      STATUS, 2
0x00FF	0x28C8      	GOTO       L_verifyBit24
0x0100	0x0825      	MOVF       FARG_verifyBit_position, 0
0x0101	0x3A01      	XORLW      1
0x0102	0x1903      	BTFSC      STATUS, 2
0x0103	0x28D0      	GOTO       L_verifyBit25
0x0104	0x0825      	MOVF       FARG_verifyBit_position, 0
0x0105	0x3A02      	XORLW      2
0x0106	0x1903      	BTFSC      STATUS, 2
0x0107	0x28D6      	GOTO       L_verifyBit26
0x0108	0x0825      	MOVF       FARG_verifyBit_position, 0
0x0109	0x3A03      	XORLW      3
0x010A	0x1903      	BTFSC      STATUS, 2
0x010B	0x28DC      	GOTO       L_verifyBit27
0x010C	0x0825      	MOVF       FARG_verifyBit_position, 0
0x010D	0x3A04      	XORLW      4
0x010E	0x1903      	BTFSC      STATUS, 2
0x010F	0x28E2      	GOTO       L_verifyBit28
0x0110	0x0825      	MOVF       FARG_verifyBit_position, 0
0x0111	0x3A05      	XORLW      5
0x0112	0x1903      	BTFSC      STATUS, 2
0x0113	0x28E8      	GOTO       L_verifyBit29
0x0114	0x0825      	MOVF       FARG_verifyBit_position, 0
0x0115	0x3A06      	XORLW      6
0x0116	0x1903      	BTFSC      STATUS, 2
0x0117	0x28EE      	GOTO       L_verifyBit30
0x0118	0x0825      	MOVF       FARG_verifyBit_position, 0
0x0119	0x3A07      	XORLW      7
0x011A	0x1903      	BTFSC      STATUS, 2
0x011B	0x28F4      	GOTO       L_verifyBit31
;functions.h,98 :: 		}
L_end_verifyBit:
0x011C	0x0008      	RETURN
; end of _verifyBit
_printColumn:
;functions.h,100 :: 		void printColumn(char character) {
;functions.h,102 :: 		for(counterFor = 1; counterFor < counterVertical; counterFor++) {
0x011D	0x3001      	MOVLW      1
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x1303      	BCF        STATUS, 6
0x0120	0x00DB      	MOVWF      _counterFor
L_printColumn32:
0x0121	0x085A      	MOVF       _counterVertical, 0
0x0122	0x025B      	SUBWF      _counterFor, 0
0x0123	0x1803      	BTFSC      STATUS, 0
0x0124	0x293E      	GOTO       L_printColumn33
;functions.h,103 :: 		if(verifyBit(character, counterFor))
0x0125	0x086F      	MOVF       FARG_printColumn_character, 0
0x0126	0x1683      	BSF        STATUS, 5
0x0127	0x00A4      	MOVWF      FARG_verifyBit_character
0x0128	0x1283      	BCF        STATUS, 5
0x0129	0x085B      	MOVF       _counterFor, 0
0x012A	0x1683      	BSF        STATUS, 5
0x012B	0x00A5      	MOVWF      FARG_verifyBit_position
0x012C	0x20C7      	CALL       _verifyBit
0x012D	0x0870      	MOVF       R0, 0
0x012E	0x0471      	IORWF      R0+1, 0
0x012F	0x1903      	BTFSC      STATUS, 2
0x0130	0x293A      	GOTO       L_printColumn35
;functions.h,104 :: 		lightLine(counterVertical-counterFor);
0x0131	0x1283      	BCF        STATUS, 5
0x0132	0x085B      	MOVF       _counterFor, 0
0x0133	0x025A      	SUBWF      _counterVertical, 0
0x0134	0x1683      	BSF        STATUS, 5
0x0135	0x00A4      	MOVWF      FARG_lightLine_line
0x0136	0x01A5      	CLRF       FARG_lightLine_line+1
0x0137	0x1C03      	BTFSS      STATUS, 0
0x0138	0x03A5      	DECF       FARG_lightLine_line+1, 1
0x0139	0x2075      	CALL       _lightLine
L_printColumn35:
;functions.h,102 :: 		for(counterFor = 1; counterFor < counterVertical; counterFor++) {
0x013A	0x1283      	BCF        STATUS, 5
0x013B	0x1303      	BCF        STATUS, 6
0x013C	0x0ADB      	INCF       _counterFor, 1
;functions.h,105 :: 		}
0x013D	0x2921      	GOTO       L_printColumn32
L_printColumn33:
;functions.h,106 :: 		}
L_end_printColumn:
0x013E	0x0008      	RETURN
; end of _printColumn
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x013F	0x1283      	BCF        STATUS, 5
0x0140	0x1303      	BCF        STATUS, 6
0x0141	0x086C      	MOVF       ___DoICPAddr+1, 0
0x0142	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0143	0x086B      	MOVF       ___DoICPAddr, 0
0x0144	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0145	0x0008      	RETURN
; end of _____DoICP
_initialSetup:
;defines.h,60 :: 		void initialSetup() {
;defines.h,61 :: 		ANSEL = 0; ANSELH = 0;
0x0146	0x1683      	BSF        STATUS, 5
0x0147	0x1703      	BSF        STATUS, 6
0x0148	0x0188      	CLRF       ANSEL
0x0149	0x0189      	CLRF       ANSELH
;defines.h,63 :: 		C1ON_BIT = 0; C2ON_BIT = 0;
0x014A	0x1283      	BCF        STATUS, 5
0x014B	0x1387      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
0x014C	0x1388      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;defines.h,65 :: 		TRISA = 0b00010000;
0x014D	0x3010      	MOVLW      16
0x014E	0x1683      	BSF        STATUS, 5
0x014F	0x1303      	BCF        STATUS, 6
0x0150	0x0085      	MOVWF      TRISA
;defines.h,66 :: 		TRISB = 0b11000000;
0x0151	0x30C0      	MOVLW      192
0x0152	0x0086      	MOVWF      TRISB
;defines.h,67 :: 		TRISC = 0b11011000;
0x0153	0x30D8      	MOVLW      216
0x0154	0x0087      	MOVWF      TRISC
;defines.h,69 :: 		WPUB   = 0b11000000; ADCON1  = 0b00001111;
0x0155	0x30C0      	MOVLW      192
0x0156	0x0095      	MOVWF      WPUB
0x0157	0x300F      	MOVLW      15
0x0158	0x009F      	MOVWF      ADCON1
;defines.h,70 :: 		OSCCON = 0b01110100; OSCTUNE = 0b00000000;
0x0159	0x3074      	MOVLW      116
0x015A	0x008F      	MOVWF      OSCCON
0x015B	0x0190      	CLRF       OSCTUNE
;defines.h,72 :: 		OPTION_REG = 0b00001111;
0x015C	0x300F      	MOVLW      15
0x015D	0x0081      	MOVWF      OPTION_REG
;defines.h,73 :: 		INTCON = 0b11000000;
0x015E	0x30C0      	MOVLW      192
0x015F	0x008B      	MOVWF      INTCON
;defines.h,75 :: 		PIE1.TMR2IE = 1;
0x0160	0x148C      	BSF        PIE1, 1
;defines.h,76 :: 		T2CON = 0b00000101;
0x0161	0x3005      	MOVLW      5
0x0162	0x1283      	BCF        STATUS, 5
0x0163	0x0092      	MOVWF      T2CON
;defines.h,77 :: 		}
L_end_initialSetup:
0x0164	0x0008      	RETURN
; end of _initialSetup
_setColumn:
;functions.h,1 :: 		void setColumn(int column) {
;functions.h,3 :: 		PORTA |= 0b00101010; // off all columns
0x0165	0x302A      	MOVLW      42
0x0166	0x1283      	BCF        STATUS, 5
0x0167	0x1303      	BCF        STATUS, 6
0x0168	0x0485      	IORWF      PORTA, 1
;functions.h,4 :: 		PORTB |= 0b00011001;
0x0169	0x3019      	MOVLW      25
0x016A	0x0486      	IORWF      PORTB, 1
;functions.h,5 :: 		PORTC |= 0b00100111;
0x016B	0x3027      	MOVLW      39
0x016C	0x0487      	IORWF      PORTC, 1
;functions.h,7 :: 		PORTA &= 0b00111010; // off all lines
0x016D	0x303A      	MOVLW      58
0x016E	0x0585      	ANDWF      PORTA, 1
;functions.h,8 :: 		PORTB &= 0b11011001;
0x016F	0x30D9      	MOVLW      217
0x0170	0x0586      	ANDWF      PORTB, 1
;functions.h,10 :: 		switch(column) {
0x0171	0x2989      	GOTO       L_setColumn0
;functions.h,11 :: 		case 1:
L_setColumn2:
;functions.h,12 :: 		on_column_1;
0x0172	0x1085      	BCF        PORTA, 1
;functions.h,13 :: 		break;
0x0173	0x29D2      	GOTO       L_setColumn1
;functions.h,14 :: 		case 2:
L_setColumn3:
;functions.h,15 :: 		on_column_2;
0x0174	0x1186      	BCF        PORTB, 3
;functions.h,16 :: 		break;
0x0175	0x29D2      	GOTO       L_setColumn1
;functions.h,17 :: 		case 3:
L_setColumn4:
;functions.h,18 :: 		on_column_3;
0x0176	0x1185      	BCF        PORTA, 3
;functions.h,19 :: 		break;
0x0177	0x29D2      	GOTO       L_setColumn1
;functions.h,20 :: 		case 4:
L_setColumn5:
;functions.h,21 :: 		on_column_4;
0x0178	0x1285      	BCF        PORTA, 5
;functions.h,22 :: 		break;
0x0179	0x29D2      	GOTO       L_setColumn1
;functions.h,23 :: 		case 5:
L_setColumn6:
;functions.h,24 :: 		if(posInitialColumn == 4) on_column_5;
0x017A	0x084F      	MOVF       _posInitialColumn, 0
0x017B	0x3A04      	XORLW      4
0x017C	0x1D03      	BTFSS      STATUS, 2
0x017D	0x297F      	GOTO       L_setColumn7
0x017E	0x1206      	BCF        PORTB, 4
L_setColumn7:
;functions.h,25 :: 		break;
0x017F	0x29D2      	GOTO       L_setColumn1
;functions.h,26 :: 		case 6:
L_setColumn8:
;functions.h,27 :: 		on_column_6;
0x0180	0x1007      	BCF        PORTC, 0
;functions.h,28 :: 		break;
0x0181	0x29D2      	GOTO       L_setColumn1
;functions.h,29 :: 		case 7:
L_setColumn9:
;functions.h,30 :: 		on_column_7;
0x0182	0x1287      	BCF        PORTC, 5
;functions.h,31 :: 		break;
0x0183	0x29D2      	GOTO       L_setColumn1
;functions.h,32 :: 		case 8:
L_setColumn10:
;functions.h,33 :: 		on_column_8;
0x0184	0x1087      	BCF        PORTC, 1
;functions.h,34 :: 		break;
0x0185	0x29D2      	GOTO       L_setColumn1
;functions.h,35 :: 		case 9:
L_setColumn11:
;functions.h,36 :: 		on_column_9;
0x0186	0x1107      	BCF        PORTC, 2
;functions.h,37 :: 		break;
0x0187	0x29D2      	GOTO       L_setColumn1
;functions.h,38 :: 		default:
L_setColumn12:
;functions.h,39 :: 		break;
0x0188	0x29D2      	GOTO       L_setColumn1
;functions.h,40 :: 		}
L_setColumn0:
0x0189	0x3000      	MOVLW      0
0x018A	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x018B	0x1D03      	BTFSS      STATUS, 2
0x018C	0x298F      	GOTO       L__setColumn87
0x018D	0x3001      	MOVLW      1
0x018E	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn87:
0x018F	0x1903      	BTFSC      STATUS, 2
0x0190	0x2972      	GOTO       L_setColumn2
0x0191	0x3000      	MOVLW      0
0x0192	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x0193	0x1D03      	BTFSS      STATUS, 2
0x0194	0x2997      	GOTO       L__setColumn88
0x0195	0x3002      	MOVLW      2
0x0196	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn88:
0x0197	0x1903      	BTFSC      STATUS, 2
0x0198	0x2974      	GOTO       L_setColumn3
0x0199	0x3000      	MOVLW      0
0x019A	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x019B	0x1D03      	BTFSS      STATUS, 2
0x019C	0x299F      	GOTO       L__setColumn89
0x019D	0x3003      	MOVLW      3
0x019E	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn89:
0x019F	0x1903      	BTFSC      STATUS, 2
0x01A0	0x2976      	GOTO       L_setColumn4
0x01A1	0x3000      	MOVLW      0
0x01A2	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x01A3	0x1D03      	BTFSS      STATUS, 2
0x01A4	0x29A7      	GOTO       L__setColumn90
0x01A5	0x3004      	MOVLW      4
0x01A6	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn90:
0x01A7	0x1903      	BTFSC      STATUS, 2
0x01A8	0x2978      	GOTO       L_setColumn5
0x01A9	0x3000      	MOVLW      0
0x01AA	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x01AB	0x1D03      	BTFSS      STATUS, 2
0x01AC	0x29AF      	GOTO       L__setColumn91
0x01AD	0x3005      	MOVLW      5
0x01AE	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn91:
0x01AF	0x1903      	BTFSC      STATUS, 2
0x01B0	0x297A      	GOTO       L_setColumn6
0x01B1	0x3000      	MOVLW      0
0x01B2	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x01B3	0x1D03      	BTFSS      STATUS, 2
0x01B4	0x29B7      	GOTO       L__setColumn92
0x01B5	0x3006      	MOVLW      6
0x01B6	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn92:
0x01B7	0x1903      	BTFSC      STATUS, 2
0x01B8	0x2980      	GOTO       L_setColumn8
0x01B9	0x3000      	MOVLW      0
0x01BA	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x01BB	0x1D03      	BTFSS      STATUS, 2
0x01BC	0x29BF      	GOTO       L__setColumn93
0x01BD	0x3007      	MOVLW      7
0x01BE	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn93:
0x01BF	0x1903      	BTFSC      STATUS, 2
0x01C0	0x2982      	GOTO       L_setColumn9
0x01C1	0x3000      	MOVLW      0
0x01C2	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x01C3	0x1D03      	BTFSS      STATUS, 2
0x01C4	0x29C7      	GOTO       L__setColumn94
0x01C5	0x3008      	MOVLW      8
0x01C6	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn94:
0x01C7	0x1903      	BTFSC      STATUS, 2
0x01C8	0x2984      	GOTO       L_setColumn10
0x01C9	0x3000      	MOVLW      0
0x01CA	0x066E      	XORWF      FARG_setColumn_column+1, 0
0x01CB	0x1D03      	BTFSS      STATUS, 2
0x01CC	0x29CF      	GOTO       L__setColumn95
0x01CD	0x3009      	MOVLW      9
0x01CE	0x066D      	XORWF      FARG_setColumn_column, 0
L__setColumn95:
0x01CF	0x1903      	BTFSC      STATUS, 2
0x01D0	0x2986      	GOTO       L_setColumn11
0x01D1	0x2988      	GOTO       L_setColumn12
L_setColumn1:
;functions.h,41 :: 		}
L_end_setColumn:
0x01D2	0x0008      	RETURN
; end of _setColumn
_printStorey:
;functions.h,108 :: 		void printStorey(char character_1, char character_2, int status) {
;functions.h,112 :: 		if(posInitialColumn == 1 && currentColumn < 6) {                           // Seta caracter que sera impresso no momento
0x01D3	0x1283      	BCF        STATUS, 5
0x01D4	0x1303      	BCF        STATUS, 6
0x01D5	0x084F      	MOVF       _posInitialColumn, 0
0x01D6	0x3A01      	XORLW      1
0x01D7	0x1D03      	BTFSS      STATUS, 2
0x01D8	0x29E2      	GOTO       L_printStorey38
0x01D9	0x3006      	MOVLW      6
0x01DA	0x0259      	SUBWF      _currentColumn, 0
0x01DB	0x1803      	BTFSC      STATUS, 0
0x01DC	0x29E2      	GOTO       L_printStorey38
L__printStorey81:
;functions.h,113 :: 		characterAux = character_1;
0x01DD	0x1683      	BSF        STATUS, 5
0x01DE	0x0820      	MOVF       FARG_printStorey_character_1, 0
0x01DF	0x1283      	BCF        STATUS, 5
0x01E0	0x00ED      	MOVWF      printStorey_characterAux_L0
;functions.h,114 :: 		} else {
0x01E1	0x29E6      	GOTO       L_printStorey39
L_printStorey38:
;functions.h,115 :: 		characterAux = character_2;
0x01E2	0x1683      	BSF        STATUS, 5
0x01E3	0x0821      	MOVF       FARG_printStorey_character_2, 0
0x01E4	0x1283      	BCF        STATUS, 5
0x01E5	0x00ED      	MOVWF      printStorey_characterAux_L0
;functions.h,116 :: 		}
L_printStorey39:
;functions.h,121 :: 		switch(characterAux) {
0x01E6	0x2AAB      	GOTO       L_printStorey40
;functions.h,122 :: 		case 'A':
L_printStorey42:
;functions.h,123 :: 		printColumn(_A[currentPosition-1]);
0x01E7	0x3001      	MOVLW      1
0x01E8	0x024D      	SUBWF      _currentPosition, 0
0x01E9	0x00F0      	MOVWF      R0
0x01EA	0x01F1      	CLRF       R0+1
0x01EB	0x1C03      	BTFSS      STATUS, 0
0x01EC	0x03F1      	DECF       R0+1, 1
0x01ED	0x0870      	MOVF       R0, 0
0x01EE	0x3E54      	ADDLW      __A
0x01EF	0x0084      	MOVWF      FSR
0x01F0	0x0800      	MOVF       INDF, 0
0x01F1	0x00EF      	MOVWF      FARG_printColumn_character
0x01F2	0x211D      	CALL       _printColumn
;functions.h,124 :: 		break;
0x01F3	0x2AE8      	GOTO       L_printStorey41
;functions.h,125 :: 		case 'B':
L_printStorey43:
;functions.h,126 :: 		printColumn(_B[currentPosition-1]);
0x01F4	0x3001      	MOVLW      1
0x01F5	0x024D      	SUBWF      _currentPosition, 0
0x01F6	0x00F0      	MOVWF      R0
0x01F7	0x01F1      	CLRF       R0+1
0x01F8	0x1C03      	BTFSS      STATUS, 0
0x01F9	0x03F1      	DECF       R0+1, 1
0x01FA	0x0870      	MOVF       R0, 0
0x01FB	0x3E50      	ADDLW      __B
0x01FC	0x0084      	MOVWF      FSR
0x01FD	0x0800      	MOVF       INDF, 0
0x01FE	0x00EF      	MOVWF      FARG_printColumn_character
0x01FF	0x211D      	CALL       _printColumn
;functions.h,127 :: 		break;
0x0200	0x2AE8      	GOTO       L_printStorey41
;functions.h,128 :: 		case 'C':
L_printStorey44:
;functions.h,129 :: 		printColumn(_C[currentPosition-1]);
0x0201	0x3001      	MOVLW      1
0x0202	0x024D      	SUBWF      _currentPosition, 0
0x0203	0x00F0      	MOVWF      R0
0x0204	0x01F1      	CLRF       R0+1
0x0205	0x1C03      	BTFSS      STATUS, 0
0x0206	0x03F1      	DECF       R0+1, 1
0x0207	0x0870      	MOVF       R0, 0
0x0208	0x3E2D      	ADDLW      __C
0x0209	0x0084      	MOVWF      FSR
0x020A	0x0800      	MOVF       INDF, 0
0x020B	0x00EF      	MOVWF      FARG_printColumn_character
0x020C	0x211D      	CALL       _printColumn
;functions.h,130 :: 		break;
0x020D	0x2AE8      	GOTO       L_printStorey41
;functions.h,131 :: 		case 'D':
L_printStorey45:
;functions.h,132 :: 		printColumn(_D[currentPosition-1]);
0x020E	0x3001      	MOVLW      1
0x020F	0x024D      	SUBWF      _currentPosition, 0
0x0210	0x00F0      	MOVWF      R0
0x0211	0x01F1      	CLRF       R0+1
0x0212	0x1C03      	BTFSS      STATUS, 0
0x0213	0x03F1      	DECF       R0+1, 1
0x0214	0x0870      	MOVF       R0, 0
0x0215	0x3E31      	ADDLW      __D
0x0216	0x0084      	MOVWF      FSR
0x0217	0x0800      	MOVF       INDF, 0
0x0218	0x00EF      	MOVWF      FARG_printColumn_character
0x0219	0x211D      	CALL       _printColumn
;functions.h,133 :: 		break;
0x021A	0x2AE8      	GOTO       L_printStorey41
;functions.h,134 :: 		case 'E':
L_printStorey46:
;functions.h,135 :: 		printColumn(_E[currentPosition-1]);
0x021B	0x3001      	MOVLW      1
0x021C	0x024D      	SUBWF      _currentPosition, 0
0x021D	0x00F0      	MOVWF      R0
0x021E	0x01F1      	CLRF       R0+1
0x021F	0x1C03      	BTFSS      STATUS, 0
0x0220	0x03F1      	DECF       R0+1, 1
0x0221	0x0870      	MOVF       R0, 0
0x0222	0x3E21      	ADDLW      __E
0x0223	0x0084      	MOVWF      FSR
0x0224	0x0800      	MOVF       INDF, 0
0x0225	0x00EF      	MOVWF      FARG_printColumn_character
0x0226	0x211D      	CALL       _printColumn
;functions.h,136 :: 		break;
0x0227	0x2AE8      	GOTO       L_printStorey41
;functions.h,137 :: 		case '0':
L_printStorey47:
;functions.h,138 :: 		printColumn(_0[currentPosition-1]);
0x0228	0x3001      	MOVLW      1
0x0229	0x024D      	SUBWF      _currentPosition, 0
0x022A	0x00F0      	MOVWF      R0
0x022B	0x01F1      	CLRF       R0+1
0x022C	0x1C03      	BTFSS      STATUS, 0
0x022D	0x03F1      	DECF       R0+1, 1
0x022E	0x0870      	MOVF       R0, 0
0x022F	0x3E25      	ADDLW      __0
0x0230	0x0084      	MOVWF      FSR
0x0231	0x0800      	MOVF       INDF, 0
0x0232	0x00EF      	MOVWF      FARG_printColumn_character
0x0233	0x211D      	CALL       _printColumn
;functions.h,139 :: 		break;
0x0234	0x2AE8      	GOTO       L_printStorey41
;functions.h,140 :: 		case '1':
L_printStorey48:
;functions.h,141 :: 		printColumn(_1[currentPosition-1]);
0x0235	0x3001      	MOVLW      1
0x0236	0x024D      	SUBWF      _currentPosition, 0
0x0237	0x00F0      	MOVWF      R0
0x0238	0x01F1      	CLRF       R0+1
0x0239	0x1C03      	BTFSS      STATUS, 0
0x023A	0x03F1      	DECF       R0+1, 1
0x023B	0x0870      	MOVF       R0, 0
0x023C	0x3E29      	ADDLW      __1
0x023D	0x0084      	MOVWF      FSR
0x023E	0x0800      	MOVF       INDF, 0
0x023F	0x00EF      	MOVWF      FARG_printColumn_character
0x0240	0x211D      	CALL       _printColumn
;functions.h,142 :: 		break;
0x0241	0x2AE8      	GOTO       L_printStorey41
;functions.h,143 :: 		case '2':
L_printStorey49:
;functions.h,144 :: 		printColumn(_2[currentPosition-1]);
0x0242	0x3001      	MOVLW      1
0x0243	0x024D      	SUBWF      _currentPosition, 0
0x0244	0x00F0      	MOVWF      R0
0x0245	0x01F1      	CLRF       R0+1
0x0246	0x1C03      	BTFSS      STATUS, 0
0x0247	0x03F1      	DECF       R0+1, 1
0x0248	0x0870      	MOVF       R0, 0
0x0249	0x3E41      	ADDLW      __2
0x024A	0x0084      	MOVWF      FSR
0x024B	0x0800      	MOVF       INDF, 0
0x024C	0x00EF      	MOVWF      FARG_printColumn_character
0x024D	0x211D      	CALL       _printColumn
;functions.h,145 :: 		break;
0x024E	0x2AE8      	GOTO       L_printStorey41
;functions.h,146 :: 		case '3':
L_printStorey50:
;functions.h,147 :: 		printColumn(_3[currentPosition-1]);
0x024F	0x3001      	MOVLW      1
0x0250	0x024D      	SUBWF      _currentPosition, 0
0x0251	0x00F0      	MOVWF      R0
0x0252	0x01F1      	CLRF       R0+1
0x0253	0x1C03      	BTFSS      STATUS, 0
0x0254	0x03F1      	DECF       R0+1, 1
0x0255	0x0870      	MOVF       R0, 0
0x0256	0x3E45      	ADDLW      __3
0x0257	0x0084      	MOVWF      FSR
0x0258	0x0800      	MOVF       INDF, 0
0x0259	0x00EF      	MOVWF      FARG_printColumn_character
0x025A	0x211D      	CALL       _printColumn
;functions.h,148 :: 		break;
0x025B	0x2AE8      	GOTO       L_printStorey41
;functions.h,149 :: 		case '4':
L_printStorey51:
;functions.h,150 :: 		printColumn(_4[currentPosition-1]);
0x025C	0x3001      	MOVLW      1
0x025D	0x024D      	SUBWF      _currentPosition, 0
0x025E	0x00F0      	MOVWF      R0
0x025F	0x01F1      	CLRF       R0+1
0x0260	0x1C03      	BTFSS      STATUS, 0
0x0261	0x03F1      	DECF       R0+1, 1
0x0262	0x0870      	MOVF       R0, 0
0x0263	0x3E49      	ADDLW      __4
0x0264	0x0084      	MOVWF      FSR
0x0265	0x0800      	MOVF       INDF, 0
0x0266	0x00EF      	MOVWF      FARG_printColumn_character
0x0267	0x211D      	CALL       _printColumn
;functions.h,151 :: 		break;
0x0268	0x2AE8      	GOTO       L_printStorey41
;functions.h,152 :: 		case '5':
L_printStorey52:
;functions.h,153 :: 		printColumn(_5[currentPosition-1]);
0x0269	0x3001      	MOVLW      1
0x026A	0x024D      	SUBWF      _currentPosition, 0
0x026B	0x00F0      	MOVWF      R0
0x026C	0x01F1      	CLRF       R0+1
0x026D	0x1C03      	BTFSS      STATUS, 0
0x026E	0x03F1      	DECF       R0+1, 1
0x026F	0x0870      	MOVF       R0, 0
0x0270	0x3E35      	ADDLW      __5
0x0271	0x0084      	MOVWF      FSR
0x0272	0x0800      	MOVF       INDF, 0
0x0273	0x00EF      	MOVWF      FARG_printColumn_character
0x0274	0x211D      	CALL       _printColumn
;functions.h,154 :: 		break;
0x0275	0x2AE8      	GOTO       L_printStorey41
;functions.h,155 :: 		case '6':
L_printStorey53:
;functions.h,156 :: 		printColumn(_6[currentPosition-1]);
0x0276	0x3001      	MOVLW      1
0x0277	0x024D      	SUBWF      _currentPosition, 0
0x0278	0x00F0      	MOVWF      R0
0x0279	0x01F1      	CLRF       R0+1
0x027A	0x1C03      	BTFSS      STATUS, 0
0x027B	0x03F1      	DECF       R0+1, 1
0x027C	0x0870      	MOVF       R0, 0
0x027D	0x3E39      	ADDLW      __6
0x027E	0x0084      	MOVWF      FSR
0x027F	0x0800      	MOVF       INDF, 0
0x0280	0x00EF      	MOVWF      FARG_printColumn_character
0x0281	0x211D      	CALL       _printColumn
;functions.h,157 :: 		break;
0x0282	0x2AE8      	GOTO       L_printStorey41
;functions.h,158 :: 		case '7':
L_printStorey54:
;functions.h,159 :: 		printColumn(_7[currentPosition-1]);
0x0283	0x3001      	MOVLW      1
0x0284	0x024D      	SUBWF      _currentPosition, 0
0x0285	0x00F0      	MOVWF      R0
0x0286	0x01F1      	CLRF       R0+1
0x0287	0x1C03      	BTFSS      STATUS, 0
0x0288	0x03F1      	DECF       R0+1, 1
0x0289	0x0870      	MOVF       R0, 0
0x028A	0x3E3D      	ADDLW      __7
0x028B	0x0084      	MOVWF      FSR
0x028C	0x0800      	MOVF       INDF, 0
0x028D	0x00EF      	MOVWF      FARG_printColumn_character
0x028E	0x211D      	CALL       _printColumn
;functions.h,160 :: 		break;
0x028F	0x2AE8      	GOTO       L_printStorey41
;functions.h,161 :: 		case '8':
L_printStorey55:
;functions.h,162 :: 		printColumn(_8[currentPosition-1]);
0x0290	0x3001      	MOVLW      1
0x0291	0x024D      	SUBWF      _currentPosition, 0
0x0292	0x00F0      	MOVWF      R0
0x0293	0x01F1      	CLRF       R0+1
0x0294	0x1C03      	BTFSS      STATUS, 0
0x0295	0x03F1      	DECF       R0+1, 1
0x0296	0x0870      	MOVF       R0, 0
0x0297	0x3E60      	ADDLW      __8
0x0298	0x0084      	MOVWF      FSR
0x0299	0x0800      	MOVF       INDF, 0
0x029A	0x00EF      	MOVWF      FARG_printColumn_character
0x029B	0x211D      	CALL       _printColumn
;functions.h,163 :: 		break;
0x029C	0x2AE8      	GOTO       L_printStorey41
;functions.h,164 :: 		case '9':
L_printStorey56:
;functions.h,165 :: 		printColumn(_9[currentPosition-1]);
0x029D	0x3001      	MOVLW      1
0x029E	0x024D      	SUBWF      _currentPosition, 0
0x029F	0x00F0      	MOVWF      R0
0x02A0	0x01F1      	CLRF       R0+1
0x02A1	0x1C03      	BTFSS      STATUS, 0
0x02A2	0x03F1      	DECF       R0+1, 1
0x02A3	0x0870      	MOVF       R0, 0
0x02A4	0x3E5C      	ADDLW      __9
0x02A5	0x0084      	MOVWF      FSR
0x02A6	0x0800      	MOVF       INDF, 0
0x02A7	0x00EF      	MOVWF      FARG_printColumn_character
0x02A8	0x211D      	CALL       _printColumn
;functions.h,166 :: 		break;
0x02A9	0x2AE8      	GOTO       L_printStorey41
;functions.h,167 :: 		default:
L_printStorey57:
;functions.h,168 :: 		break;
0x02AA	0x2AE8      	GOTO       L_printStorey41
;functions.h,169 :: 		}
L_printStorey40:
0x02AB	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02AC	0x3A41      	XORLW      65
0x02AD	0x1903      	BTFSC      STATUS, 2
0x02AE	0x29E7      	GOTO       L_printStorey42
0x02AF	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02B0	0x3A42      	XORLW      66
0x02B1	0x1903      	BTFSC      STATUS, 2
0x02B2	0x29F4      	GOTO       L_printStorey43
0x02B3	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02B4	0x3A43      	XORLW      67
0x02B5	0x1903      	BTFSC      STATUS, 2
0x02B6	0x2A01      	GOTO       L_printStorey44
0x02B7	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02B8	0x3A44      	XORLW      68
0x02B9	0x1903      	BTFSC      STATUS, 2
0x02BA	0x2A0E      	GOTO       L_printStorey45
0x02BB	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02BC	0x3A45      	XORLW      69
0x02BD	0x1903      	BTFSC      STATUS, 2
0x02BE	0x2A1B      	GOTO       L_printStorey46
0x02BF	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02C0	0x3A30      	XORLW      48
0x02C1	0x1903      	BTFSC      STATUS, 2
0x02C2	0x2A28      	GOTO       L_printStorey47
0x02C3	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02C4	0x3A31      	XORLW      49
0x02C5	0x1903      	BTFSC      STATUS, 2
0x02C6	0x2A35      	GOTO       L_printStorey48
0x02C7	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02C8	0x3A32      	XORLW      50
0x02C9	0x1903      	BTFSC      STATUS, 2
0x02CA	0x2A42      	GOTO       L_printStorey49
0x02CB	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02CC	0x3A33      	XORLW      51
0x02CD	0x1903      	BTFSC      STATUS, 2
0x02CE	0x2A4F      	GOTO       L_printStorey50
0x02CF	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02D0	0x3A34      	XORLW      52
0x02D1	0x1903      	BTFSC      STATUS, 2
0x02D2	0x2A5C      	GOTO       L_printStorey51
0x02D3	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02D4	0x3A35      	XORLW      53
0x02D5	0x1903      	BTFSC      STATUS, 2
0x02D6	0x2A69      	GOTO       L_printStorey52
0x02D7	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02D8	0x3A36      	XORLW      54
0x02D9	0x1903      	BTFSC      STATUS, 2
0x02DA	0x2A76      	GOTO       L_printStorey53
0x02DB	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02DC	0x3A37      	XORLW      55
0x02DD	0x1903      	BTFSC      STATUS, 2
0x02DE	0x2A83      	GOTO       L_printStorey54
0x02DF	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02E0	0x3A38      	XORLW      56
0x02E1	0x1903      	BTFSC      STATUS, 2
0x02E2	0x2A90      	GOTO       L_printStorey55
0x02E3	0x086D      	MOVF       printStorey_characterAux_L0, 0
0x02E4	0x3A39      	XORLW      57
0x02E5	0x1903      	BTFSC      STATUS, 2
0x02E6	0x2A9D      	GOTO       L_printStorey56
0x02E7	0x2AAA      	GOTO       L_printStorey57
L_printStorey41:
;functions.h,172 :: 		}
L_end_printStorey:
0x02E8	0x0008      	RETURN
; end of _printStorey
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x02E9	0x213F      	CALL       _____DoICP
0x02EA	0x118A      	BCF        PCLATH, 3
0x02EB	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x02EC	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x02ED	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x02EE	0x0AEB      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x02EF	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x02F0	0x0AEC      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x02F1	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x02F2	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x02F3	0x2AE9      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x02F4	0x0008      	RETURN
; end of ___CC2DW
_main:
0x02F5	0x234C      	CALL       844
;DisplayIPD.c,23 :: 		void main() {
;DisplayIPD.c,24 :: 		initialSetup();                                                            // Funcao que realiza as pre configuracoes do microcontrolador
0x02F6	0x2146      	CALL       _initialSetup
;DisplayIPD.c,26 :: 		character_1 = '2';                                                         //
0x02F7	0x3032      	MOVLW      50
0x02F8	0x00E4      	MOVWF      _character_1
;DisplayIPD.c,27 :: 		character_2 = '9';
0x02F9	0x3039      	MOVLW      57
0x02FA	0x00E5      	MOVWF      _character_2
;DisplayIPD.c,28 :: 		statusPrint = 1;
0x02FB	0x3001      	MOVLW      1
0x02FC	0x00E8      	MOVWF      _statusPrint
;DisplayIPD.c,30 :: 		nextCharacter_1 = 'A';
0x02FD	0x3041      	MOVLW      65
0x02FE	0x00E7      	MOVWF      _nextCharacter_1
;DisplayIPD.c,31 :: 		nextCharacter_2 = 'B';
0x02FF	0x3042      	MOVLW      66
0x0300	0x00E6      	MOVWF      _nextCharacter_2
;DisplayIPD.c,33 :: 		while(1) {
L_main79:
;DisplayIPD.c,34 :: 		asm {clrwdt}
0x0301	0x0064      	CLRWDT
;DisplayIPD.c,36 :: 		}
0x0302	0x2B01      	GOTO       L_main79
;DisplayIPD.c,37 :: 		}
L_end_main:
0x0303	0x2B03      	GOTO       $+0
; end of _main
0x034C	0x3021      	MOVLW      33
0x034D	0x0084      	MOVWF      FSR
0x034E	0x3043      	MOVLW      67
0x034F	0x1283      	BCF        STATUS, 5
0x0350	0x1303      	BCF        STATUS, 6
0x0351	0x00F0      	MOVWF      R0
0x0352	0x3009      	MOVLW      9
0x0353	0x00EB      	MOVWF      ___DoICPAddr
0x0354	0x3003      	MOVLW      3
0x0355	0x00EC      	MOVWF      108
0x0356	0x22E9      	CALL       745
0x0357	0x0008      	RETURN
;DisplayIPD.c,0 :: ?ICS__E
0x0309	0x34FE ;?ICS__E+0
0x030A	0x3492 ;?ICS__E+1
0x030B	0x3492 ;?ICS__E+2
0x030C	0x3492 ;?ICS__E+3
; end of ?ICS__E
;DisplayIPD.c,0 :: ?ICS__0
0x030D	0x347C ;?ICS__0+0
0x030E	0x3482 ;?ICS__0+1
0x030F	0x3482 ;?ICS__0+2
0x0310	0x347C ;?ICS__0+3
; end of ?ICS__0
;DisplayIPD.c,0 :: ?ICS__1
0x0311	0x3408 ;?ICS__1+0
0x0312	0x3484 ;?ICS__1+1
0x0313	0x34FE ;?ICS__1+2
0x0314	0x3480 ;?ICS__1+3
; end of ?ICS__1
;DisplayIPD.c,0 :: ?ICS__C
0x0315	0x347E ;?ICS__C+0
0x0316	0x3482 ;?ICS__C+1
0x0317	0x3482 ;?ICS__C+2
0x0318	0x347C ;?ICS__C+3
; end of ?ICS__C
;DisplayIPD.c,0 :: ?ICS__D
0x0319	0x34FE ;?ICS__D+0
0x031A	0x3482 ;?ICS__D+1
0x031B	0x3444 ;?ICS__D+2
0x031C	0x3438 ;?ICS__D+3
; end of ?ICS__D
;DisplayIPD.c,0 :: ?ICS__5
0x031D	0x3400 ;?ICS__5+0
0x031E	0x3400 ;?ICS__5+1
0x031F	0x3400 ;?ICS__5+2
0x0320	0x3400 ;?ICS__5+3
; end of ?ICS__5
;DisplayIPD.c,0 :: ?ICS__6
0x0321	0x3400 ;?ICS__6+0
0x0322	0x3400 ;?ICS__6+1
0x0323	0x3400 ;?ICS__6+2
0x0324	0x3400 ;?ICS__6+3
; end of ?ICS__6
;DisplayIPD.c,0 :: ?ICS__7
0x0325	0x3400 ;?ICS__7+0
0x0326	0x3400 ;?ICS__7+1
0x0327	0x3400 ;?ICS__7+2
0x0328	0x3400 ;?ICS__7+3
; end of ?ICS__7
;DisplayIPD.c,0 :: ?ICS__2
0x0329	0x34C4 ;?ICS__2+0
0x032A	0x34A2 ;?ICS__2+1
0x032B	0x3492 ;?ICS__2+2
0x032C	0x348C ;?ICS__2+3
; end of ?ICS__2
;DisplayIPD.c,0 :: ?ICS__3
0x032D	0x3400 ;?ICS__3+0
0x032E	0x3400 ;?ICS__3+1
0x032F	0x3400 ;?ICS__3+2
0x0330	0x3400 ;?ICS__3+3
; end of ?ICS__3
;DisplayIPD.c,0 :: ?ICS__4
0x0331	0x3400 ;?ICS__4+0
0x0332	0x3400 ;?ICS__4+1
0x0333	0x3400 ;?ICS__4+2
0x0334	0x3400 ;?ICS__4+3
; end of ?ICS__4
;DisplayIPD.c,0 :: ?ICS_currentPosition
0x0335	0x3401 ;?ICS_currentPosition+0
; end of ?ICS_currentPosition
;DisplayIPD.c,0 :: ?ICS_posFinalColumn
0x0336	0x340A ;?ICS_posFinalColumn+0
; end of ?ICS_posFinalColumn
;DisplayIPD.c,0 :: ?ICS_posInitialColumn
0x0337	0x3401 ;?ICS_posInitialColumn+0
; end of ?ICS_posInitialColumn
;DisplayIPD.c,0 :: ?ICS__B
0x0338	0x34FE ;?ICS__B+0
0x0339	0x3492 ;?ICS__B+1
0x033A	0x3492 ;?ICS__B+2
0x033B	0x346C ;?ICS__B+3
; end of ?ICS__B
;DisplayIPD.c,0 :: ?ICS__A
0x033C	0x34FC ;?ICS__A+0
0x033D	0x3412 ;?ICS__A+1
0x033E	0x3412 ;?ICS__A+2
0x033F	0x34FC ;?ICS__A+3
; end of ?ICS__A
;DisplayIPD.c,0 :: ?ICS_counterPrint
0x0340	0x3400 ;?ICS_counterPrint+0
; end of ?ICS_counterPrint
;DisplayIPD.c,0 :: ?ICS_currentColumn
0x0341	0x3401 ;?ICS_currentColumn+0
; end of ?ICS_currentColumn
;DisplayIPD.c,0 :: ?ICS_counterVertical
0x0342	0x3408 ;?ICS_counterVertical+0
; end of ?ICS_counterVertical
;DisplayIPD.c,0 :: ?ICS_counterFor
0x0343	0x3400 ;?ICS_counterFor+0
; end of ?ICS_counterFor
;DisplayIPD.c,0 :: ?ICS__9
0x0344	0x344C ;?ICS__9+0
0x0345	0x3492 ;?ICS__9+1
0x0346	0x3492 ;?ICS__9+2
0x0347	0x347C ;?ICS__9+3
; end of ?ICS__9
;DisplayIPD.c,0 :: ?ICS__8
0x0348	0x3400 ;?ICS__8+0
0x0349	0x3400 ;?ICS__8+1
0x034A	0x3400 ;?ICS__8+2
0x034B	0x3400 ;?ICS__8+3
; end of ?ICS__8
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [113]    _interrupt
0x0075      [82]    _lightLine
0x00C7      [86]    _verifyBit
0x011D      [34]    _printColumn
0x013F       [7]    _____DoICP
0x0146      [31]    _initialSetup
0x0165     [110]    _setColumn
0x01D3     [278]    _printStorey
0x02E9      [12]    ___CC2DW
0x02F5      [14]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0012       [1]    T2CON
0x0021       [4]    __E
0x0025       [4]    __0
0x0029       [4]    __1
0x002D       [4]    __C
0x0031       [4]    __D
0x0035       [4]    __5
0x0039       [4]    __6
0x003D       [4]    __7
0x0041       [4]    __2
0x0045       [4]    __3
0x0049       [4]    __4
0x004D       [1]    _currentPosition
0x004E       [1]    _posFinalColumn
0x004F       [1]    _posInitialColumn
0x0050       [4]    __B
0x0054       [4]    __A
0x0058       [1]    _counterPrint
0x0059       [1]    _currentColumn
0x005A       [1]    _counterVertical
0x005B       [1]    _counterFor
0x005C       [4]    __9
0x0060       [4]    __8
0x0064       [1]    _character_1
0x0065       [1]    _character_2
0x0066       [1]    _nextCharacter_2
0x0067       [1]    _nextCharacter_1
0x0068       [1]    _statusPrint
0x0069       [1]    ___savePCLATH
0x006A       [1]    ___saveSTATUS
0x006B       [2]    ___DoICPAddr
0x006D       [2]    FARG_setColumn_column
0x006D       [1]    printStorey_characterAux_L0
0x006F       [1]    FARG_printColumn_character
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x008C       [1]    PIE1
0x008F       [1]    OSCCON
0x0090       [1]    OSCTUNE
0x0095       [1]    WPUB
0x009F       [1]    ADCON1
0x00A0       [1]    FARG_printStorey_character_1
0x00A1       [1]    FARG_printStorey_character_2
0x00A2       [2]    FARG_printStorey_status
0x00A4       [1]    FARG_verifyBit_character
0x00A4       [2]    FARG_lightLine_line
0x00A5       [1]    FARG_verifyBit_position
0x0107       [0]    C1ON_bit
0x0108       [0]    C2ON_bit
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0309       [4]    ?ICS__E
0x030D       [4]    ?ICS__0
0x0311       [4]    ?ICS__1
0x0315       [4]    ?ICS__C
0x0319       [4]    ?ICS__D
0x031D       [4]    ?ICS__5
0x0321       [4]    ?ICS__6
0x0325       [4]    ?ICS__7
0x0329       [4]    ?ICS__2
0x032D       [4]    ?ICS__3
0x0331       [4]    ?ICS__4
0x0335       [1]    ?ICS_currentPosition
0x0336       [1]    ?ICS_posFinalColumn
0x0337       [1]    ?ICS_posInitialColumn
0x0338       [4]    ?ICS__B
0x033C       [4]    ?ICS__A
0x0340       [1]    ?ICS_counterPrint
0x0341       [1]    ?ICS_currentColumn
0x0342       [1]    ?ICS_counterVertical
0x0343       [1]    ?ICS_counterFor
0x0344       [4]    ?ICS__9
0x0348       [4]    ?ICS__8
